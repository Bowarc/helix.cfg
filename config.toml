theme = "ayu_dark"

[editor]
line-number = "relative"
mouse = false
bufferline = "multiple"
cursorline = true
rulers = [120]
true-color = true
shell = ["pwsh", "-NoProfile", "-c"]

[editor.auto-save]
focus-lost = true # Save on focus lost my beloved

[editor.indent-guides]
render = true

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.file-picker]
hidden = false

[editor.lsp]
display-inlay-hints = true
display-messages = true


[editor.statusline]
center = []
right = [
  "diagnostics",
  "selections",
  "position",
  "file-encoding",
  "file-line-ending",
  "file-type",
]
separator = "â”‚"
left = ["mode", "spinner", "file-name"]
mode.normal = "NORMAL"
mode.insert = "INSERT"
mode.select = "SELECT"

######################################### 
######################################### 
####             KEYBINDS            #### 
######################################### 
######################################### 

[keys.normal]

# 
# Global
# 
"F1" = "toggle_line_comments" # Sublime text keybinds im used to
"F2" = ":format" # Sublime text keybinds im used to
C-s = ":write"
C-c = [":clipboard-yank", "yank"] # Copy to yank & system clipboard
C-x = [
  ":clipboard-yank",
  "yank",
  "delete_selection",
] # Copy to yank & system clipboard & delete
C-g = "code_action" # LSP code action
C-r = "symbol_picker" # LSP file symbols
C-d = "goto_definition" # LSP symbol definition + remove page default down
C-u = "no_op" # Remove default page down
C-left = "move_prev_word_start" # Fast movement
C-right = "move_next_word_start" # Fast movement
C-j = "page_cursor_half_down" # Fast movement
C-k = "page_cursor_half_up" # Fast movement
S-left = "extend_prev_word_start" # Cool shift select
S-right = "extend_next_word_end" # Cool shift select

####
# Shared with insert mode
####
C-backspace = ["move_prev_word_start", "delete_selection"] # Delete prev word
C-del = ["move_next_word_start", "delete_selection"]       # Delete next word
C-up = "page_cursor_half_up"                               # Fast movement
C-down = "page_cursor_half_down"                           # Fast movement

####
# Shared with select mode
####
y = [":clipboard-yank", "yank"] # Make clipboard global 


####
# Modal
####
tab = ":buffer-next" # QOL switch between opened buffers
S-tab = ":buffer-previous" # QOL switch between opened buffers
esc = [
  "collapse_selection",
  "keep_primary_selection",
] # QOL clear selection etc..

# Create a cursor above / below
S-up = "copy_selection_on_prev_line"   # Create a new cursor above the current one
S-down = "copy_selection_on_next_line" # Create a new cursor below the current one

S-c = "no_op" # Disable default create cursor down behavior

[keys.normal.space]
x = ":buffer-close"              # Close current buffer 
X = ":buffer-close!"             # Force buffer close (sometime new buffers can be anoying)
space = "keep_primary_selection" # ?
s = "no_op"                      # Disable default symbol_picker bind
up = "jump_view_up"              # Quick window swap #2
down = "jump_view_down"          # Quick window swap #2
c = "no_op"                      # Disable default comment bind
left = "jump_view_left"          # Quick window swap #2
right = "jump_view_right"        # Quick window swap #2

# Display current dir on <space> > l > s
# Open new buffer and display rust compilation result <space> > r > b (rust build)
# (I diddn't keep the rust and python run as it only was a simple :sh command and i fugured that it wasn't worth it
# Most of the time i'll probably have a bacon instance opened anyway)
l = { s = ":run-shell-command eza -Tls type --git-ignore --git --color never", r = { b = [
  ":new",
  ':append-output cargo c 2>&1 | sed "s/\x1B\[[0-9;]*[JKmsu]//g"',
  "collapse_selection",
  "goto_file_start",
  "delete_selection",
] }, g = { r = [
  ":new",
  ':append-output git lgr | sed "s/\x1B\[[0-9;]*[JKmsu]//g"',
  "collapse_selection",
  "goto_file_start",
  "delete_selection",
] } }

[keys.insert]

####
# Global
#### 
"F1" = "toggle_line_comments" # Sublime text keybinds im used to
"F2" = ":format" # Sublime text keybinds im used to
C-s = ":write"
C-c = [":clipboard-yank", "yank"] # Copy to yank & system clipboard
C-x = [
  ":clipboard-yank",
  "yank",
  "delete_selection",
] # Copy to yank & system clipboard & delete
C-g = "code_action" # LSP code action
C-r = "symbol_picker" # LSP file symbols
C-d = "goto_definition" # LSP symbol definition + remove page default down
C-u = "no_op" # Remove default page down
C-left = "move_prev_word_start" # Fast movement
C-right = "move_next_word_start" # Fast movement
C-j = "page_cursor_half_down" # Fast movement
C-k = "page_cursor_half_up" # Fast movement
S-left = "extend_prev_word_start" # Cool shift select
S-right = "extend_next_word_end" # Cool shift select

####
# Shared with normal mode
####
C-backspace = ["move_prev_word_start", "delete_selection"] # Delete prev word
C-del = ["move_next_word_start", "delete_selection"]       # Delete next word
C-up = "page_cursor_half_up"                               # Fast movement
C-down = "page_cursor_half_down"                           # Fast movement

####
# Modal
####
C-ret = [
  "normal_mode",
  "open_below",
] # Go to new line no matter if there is text after cursor
C-S-ret = [
  "normal_mode",
  "open_above",
] # Same but up,  Not 100% sure about this one lol


[keys.select]

####
# Global
#### 
"F1" = "toggle_line_comments" # Sublime text keybinds im used to
"F2" = ":format" # Sublime text keybinds im used to
C-s = ":write"
C-c = [":clipboard-yank", "yank"] # Copy to yank & system clipboard
C-x = [
  ":clipboard-yank",
  "yank",
  "delete_selection",
] # Copy to yank & system clipboard & delete
C-g = "code_action" # LSP code action
C-r = "symbol_picker" # LSP file symbols
C-d = "goto_definition" # LSP symbol definition + remove page default down
C-u = "no_op" # Remove default page down
C-left = "move_prev_word_start" # Fast movement
C-right = "move_next_word_start" # Fast movement
C-j = "page_cursor_half_down" # Fast movement
C-k = "page_cursor_half_up" # Fast movement
S-left = "extend_prev_word_start" # Cool shift select
S-right = "extend_next_word_end" # Cool shift select

####
# Shared with normal mode
####
y = [":clipboard-yank", "yank"] # Make clipboard global 

####
# Select keybinds
####
"C-up" = [
  "extend_to_line_bounds",
  "delete_selection",
  "move_line_up",
  "paste_before",
  "select_mode",
] # Move current selection up
"C-down" = [
  "extend_to_line_bounds",
  "delete_selection",
  "paste_after",
  "select_mode",
] # Move current selection down
