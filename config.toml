theme = "ayu_dark"

[editor]
line-number = "relative"
mouse = false
bufferline = "multiple"
cursorline = true
rulers = [120]
true-color = true
shell = ["pwsh", "-NoProfile", "-c"]

[editor.auto-save]
focus-lost = true # Save on focus lost my beloved

[editor.indent-guides]
render = true

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.file-picker]
hidden = false

[editor.lsp]
display-inlay-hints = true
display-messages = true


[editor.statusline]
center = []
right = [
  "diagnostics",
  "selections",
  "position",
  "file-encoding",
  "file-line-ending",
  "file-type",
]
separator = "â”‚"
left = ["mode", "spinner", "file-name"]
mode.normal = "NORMAL"
mode.insert = "INSERT"
mode.select = "SELECT"

######################################### 
######################################### 
####             KEYBINDS            #### 
######################################### 
######################################### 

[keys.normal]
# 
# Shared with insert mode 
# 
"F1" = "toggle_line_comments"
"F2" = ":format"
C-s = ":write"
C-z = "undo" # Might be overkill
C-y = "redo" # Might be overkill
C-c = [
  "extend_to_line_bounds",
  "yank",
  ":clipboard-yank",
] # Copy whole current line
C-g = "code_action"
C-r = "symbol_picker"
C-left = "move_prev_word_start"
C-right = "move_next_word_start"

####
# Shared with select mode
####
"C-up" = [
  "extend_to_line_bounds",
  "delete_selection",
  "move_line_up",
  "paste_before",
] # Move current selection up
"C-down" = [
  "extend_to_line_bounds",
  "delete_selection",
  "paste_after",
] # Move current selection down
y = [":clipboard-yank", "yank"] # Make clipboard global 


####
# Normal keybinds
####
tab = ":buffer-next" # QOL switch between opened buffers
S-tab = ":buffer-previous" # QOL switch between opened buffers
esc = [
  "collapse_selection",
  "keep_primary_selection",
] # QOL clear selection etc..

# Create a cursor above / below
S-up = "copy_selection_on_prev_line"   # Create a new cursor above the current one
S-down = "copy_selection_on_next_line" # Create a new cursor below the current one

S-c = "no_op" # Disable default create cursor down behavior

[keys.normal.space]
x = ":buffer-close"              # Close current buffer 
X = ":buffer-close!"             # Force buffer close (sometime new buffers can be anoying)
space = "keep_primary_selection" # ?
c = "no_op"                      # Disable default comment bind
s = "no_op"                      # Disable default symbol_picker bind
up = "jump_view_up"              # Quick window swap #2
down = "jump_view_down"          # Quick window swap #2
left = "jump_view_left"          # Quick window swap #2
right = "jump_view_right"        # Quick window swap #2

# Display current dir on <space> > l > s
# Open new buffer and display rust compilation result <space> > r > b (rust build)
# (I diddn't keep the rust and python run as it only was a simple :sh command and i fugured that it wasn't worth it
# Most of the time i'll probably have a bacon instance opened anyway)
l = { s = ":run-shell-command eza -Tls type --git-ignore --git --color never", r = { b = [
  ":new",
  ':append-output cargo c 2>&1 | sed "s/\x1B\[[0-9;]*[JKmsu]//g"',
  "collapse_selection",
  "goto_file_start",
  "delete_selection",
] }, g = { r = [
  ":new",
  ':append-output git lgr | sed "s/\x1B\[[0-9;]*[JKmsu]//g"',
  "collapse_selection",
  "goto_file_start",
  "delete_selection",
] } }

[keys.insert]
####
# Shared with normal mode
####
"F1" = "toggle_line_comments" # St bind im used to
"F2" = ":format" # St bind im used to
C-s = ":write" # CTRL S addict
C-z = "undo" # Might be overkill
C-y = "redo" # Might be overkill
C-c = [
  "extend_to_line_bounds",
  "yank",
  ":clipboard-yank",
] # Copy whole current line
C-g = "code_action"
C-r = "symbol_picker"
C-left = "move_prev_word_start"
C-right = "move_next_word_start"

####
# Insert keybinds
####
C-ret = [
  "normal_mode",
  "open_below",
] # Go to new line no matter if there is text after cursor
C-S-ret = [
  "normal_mode",
  "open_above",
] # Same but up,  Not 100% sure about this one lol


[keys.select]
####
# Shared with normal mode
####
"C-up" = [
  "extend_to_line_bounds",
  "delete_selection",
  "move_line_up",
  "paste_before",
] # Move current selection up
"C-down" = [
  "extend_to_line_bounds",
  "delete_selection",
  "paste_after",
] # Move current selection down
y = [":clipboard-yank", "yank"] # Make clipboard global 
C-left = "move_prev_word_start"
C-right = "move_next_word_start"

####
# Select keybinds
####
